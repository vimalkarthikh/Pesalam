{"version":3,"file":"static/js/640.5d78ac3f.chunk.js","mappings":"0LAKA,MAoDA,EApDsBA,KAClB,IAAIC,EAAWC,GAAYC,EAAAA,EAAAA,UACvBC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MAab,OACIC,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAAAC,UACLF,EAAAA,EAAAA,KAAA,WAASG,UAAU,IAAGD,UAClBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,+EAA8ED,SAAA,EACzFE,EAAAA,EAAAA,MAAA,KAAGC,KAAK,IAAIF,UAAU,4EAA2ED,SAAA,EACjGF,EAAAA,EAAAA,KAAA,OAAKM,MAAM,KAAKC,OAAO,KAAKC,IAAI,yDAAyDC,IAAI,kBAAiB,gBAI9GT,EAAAA,EAAAA,KAAA,OAAKG,UAAU,iEAAgED,UAC3EE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,oCAAmCD,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,4EAA2ED,SAAC,oBAG1FE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,yBAAyBO,OAAO,IAAGR,SAAA,EAC9CE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOW,IAAI,WAAWR,UAAU,gDAA+CD,SAAC,kBAChFF,EAAAA,EAAAA,KAAA,SAAOY,IAAMC,GAAMpB,EAAYoB,EAAGC,KAAK,WAAWC,KAAK,WAAWC,GAAG,WAAWC,YAAY,mDAAWd,UAAU,wIAAwIe,SAAS,SAEtQd,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOW,IAAI,YAAYR,UAAU,gDAA+CD,SAAC,sBACjFF,EAAAA,EAAAA,KAAA,SAAOY,IAAMC,GAAMnB,EAAYmB,EAAGC,KAAK,WAAWC,KAAK,YAAYC,GAAG,YAAYC,YAAY,mDAAWd,UAAU,wIAAwIe,SAAS,SAExQlB,EAAAA,EAAAA,KAAA,UAAQmB,QAlCpBC,WACRC,EAAAA,EAAAA,IAAW5B,EAAU6B,QACrBC,EAAAA,EAAAA,IAAW,yEACJ9B,EAAU6B,QAAU5B,EAAU4B,OACrCC,EAAAA,EAAAA,IAAW,uDAELC,EAAAA,EAAAA,IAAqB/B,EAAU6B,MAAOxB,EAAO2B,OAAOC,MAAMC,IACxDA,GAAQ/B,EAAS,IAAI,GAEjC,EAyBkDkB,KAAK,SAASX,UAAU,iKAAgKD,SAAC,UACnNE,EAAAA,EAAAA,MAAA,KAAGD,UAAU,oCAAmCD,SAAA,CAAC,6BACpBF,EAAAA,EAAAA,KAAC4B,EAAAA,GAAI,CAACC,GAAG,IAAI1B,UAAU,8CAA6CD,SAAC,gCAO/G,C","sources":["components/ResetPassword.jsx"],"sourcesContent":["import React, { Fragment, useRef } from 'react'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\nimport { ErrorToast, IsPassword } from '../helper/formHelper'\nimport { ResetPasswordRequest } from '../apiRequest/authRequest'\n\nconst ResetPassword = () => {\n    let npassword, cpassword = useRef()\n    let navigate = useNavigate()\n    let params = useParams()\n\n    const onReset = async () => {\n        if (IsPassword(npassword.value)) {\n            ErrorToast(\"Password must be six characters, at least one letter and one number !\")\n        } else if (npassword.value !== cpassword.value) {\n            ErrorToast(\"Password doesn't match with confirm password.\")\n        } else {\n            await ResetPasswordRequest(npassword.value, params.token).then((result) => {\n                if (result) navigate('/')\n            })\n        }\n    }\n    return (\n        <Fragment>\n            <section className=\" \">\n                <div className=\"flex flex-col items-center justify-center px-6 py-8 mx-auto h-screen lg:py-0\">\n                    <a href=\"#\" className=\"flex bg-white p-3 items-center mb-6 text-2xl font-semibold text-gray-900 \">\n                    <img width=\"30\" height=\"30\" src=\"https://img.icons8.com/ios-glyphs/30/tail-of-whale.png\" alt=\"tail-of-whale\"/> \n\nDeep Talk\n                    </a>\n                    <div className=\"w-full bg-white rounded-lg shadow  md:mt-0 sm:max-w-md xl:p-0 \">\n                        <div className=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\n                            <h1 className=\"text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl \">\n                                Reset Password\n                            </h1>\n                            <div className=\"space-y-4 md:space-y-6\" action=\"#\">\n                                <div>\n                                    <label for=\"password\" className=\"block mb-2 text-sm font-medium text-gray-900 \">New Password</label>\n                                    <input ref={(i) => npassword = i} type=\"password\" name=\"password\" id=\"password\" placeholder=\"••••••••\" className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-[#0C7075] focus:border-[#0C7075] block w-full p-2.5 \" required=\"\" />\n                                </div>\n                                <div>\n                                    <label for=\"Cpassword\" className=\"block mb-2 text-sm font-medium text-gray-900 \">Confirm Password</label>\n                                    <input ref={(i) => cpassword = i} type=\"password\" name=\"Cpassword\" id=\"Cpassword\" placeholder=\"••••••••\" className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-[#0C7075] focus:border-[#0C7075] block w-full p-2.5 \" required=\"\" />\n                                </div>\n                                <button onClick={onReset} type=\"submit\" className=\"w-full text-white bg-[#0C7075] hover:bg-[#148e94] focus:ring-4 focus:outline-none focus:ring-[#4ebac0] font-medium rounded-lg text-sm px-5 py-2.5 text-center \">Save</button>\n                                <p className=\"text-sm font-light text-gray-500 \">\n                                    Already have an account? <Link to=\"/\" className=\"font-medium text-[#0C7075] hover:underline \">Login here</Link>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </Fragment>\n    )\n}\n\nexport default ResetPassword\n"],"names":["ResetPassword","npassword","cpassword","useRef","navigate","useNavigate","params","useParams","_jsx","Fragment","children","className","_jsxs","href","width","height","src","alt","action","for","ref","i","type","name","id","placeholder","required","onClick","async","IsPassword","value","ErrorToast","ResetPasswordRequest","token","then","result","Link","to"],"sourceRoot":""}